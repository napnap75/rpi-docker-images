FROM golang:alpine3.6 AS builder

RUN apk add --no-cache git && \
	go get -v -d github.com/minio/minio && \
	cd /go/src/github.com/minio/minio && \
	env GOOS=linux GOARCH=arm GOARM=6 go install -v -ldflags "$(go run buildscripts/gen-ldflags.go)"

FROM arm32v6/alpine:3.6

COPY qemu-arm-static /usr/bin/qemu-arm-static
COPY --from=builder /go/src/github.com/minio/minio/dockerscripts/docker-entrypoint.sh /go/src/github.com/minio/minio/dockerscripts/healthcheck.sh /go/bin/linux_arm/minio /usr/bin/

ENV MINIO_UPDATE=off \
	MINIO_ACCESS_KEY_FILE=access_key \
	MINIO_SECRET_KEY_FILE=secret_key

RUN apk add --no-cache ca-certificates && \
	echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \
	chmod +x /usr/bin/minio /usr/bin/docker-entrypoint.sh /usr/bin/healthcheck.sh

EXPOSE 9000

ENTRYPOINT ["/usr/bin/docker-entrypoint.sh"]

HEALTHCHECK --interval=30s --timeout=5s CMD /usr/bin/healthcheck.sh

CMD ["minio"]
